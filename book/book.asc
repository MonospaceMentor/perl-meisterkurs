Perl-Meisterkurs
================
:Author:    Jochen Lillich
:Email:     jochen@freistil.it

== Aufwärmtraining

(Der übliche Begriff ist ``Einleitung'', aber Aufwärmtraining passt besser, was Sie
gleich verstehen werden.)


=== Inhalt und Aufbau

Was erwartet Sie in diesem Kurs? Kurz gesagt: Sie trainieren für den schwarzen Gürtel in Perl! Nach diesem Seminar werden Sie sich gegen viele Problemstellungen verteidigen können, die sich mit Perl lösen lassen.

Auf dem Weg zum schwarzen Gürtel gibt es viel zu lernen und zu üben. In jedem Kapitel dieses Buchs werden Sie deshalb ein neues Gebiet der Perl-Programmierung erschließen. Damit Sie Schritt für Schritt vorankommen, sind die Themen nach steigendem Schwierigkeitsgrad geordnet. Und keine Angst -- wir gehen diesen Weg gemeinsam: Ich werde Ihnen die Details erklären und Sie werden ihre Fähigkeiten mit Hilfe von Verständnisfragen und Übungsaufgaben immer weiter ausbauen.

Als Belohnung wartet auf Sie am Ende jedes Kapitels ein neuer Gürtelgrad. Die Schülergrade, japanisch ``Kyu'' genannt, werden absteigend nummeriert und führen schließlich zu den als ``Dan'' bezeichneten Meistergraden, deren Nummerierung dann aufsteigend ist.

In Kapitel ``<<cha:basics,Grundlagen>>'' steigen wir mit den Grundlagen ein: Hier erkläre ich, wo Perl eigentlich herkommt und was Sie wissen müssen, bevor wir richtig einsteigen. Am Ende dieses Kapitels erhalten Sie den Weißgurt, den Gürtelgrad der Perl-Einsteiger.

Und dann geht's los: Kapitel ``<<cha:varexpr,Arbeiten mit Daten>>'' behandelt das Speichern und Verarbeiten von Daten -- denn um was sonst geht es schließlich beim Programmieren? Natürlich deckt dieser Teil nicht gleich alles ab, was mit Perl erreicht werden kann, sondern nur die grundlegenden Themen wie zum Beispiel die Arbeit mit Variablen. Der 8. Kyu, symbolisiert durch den gelben Gürtel, wartet am Ende dieses Kapitels auf Sie. Noch gibt es also viel zu tun.

Als nächsten Schritt auf unserem Weg zur Meisterschaft gehen wir die Mittel an, mit denen wir den Ablauf eines Perl-Programms steuern können, die sogenannten ``Kontrollstrukturen''. Dazu gehören die bedingte Ausführung von Programmteilen und die Wiederholung von Anweisungen innerhalb von Schleifen. Nach dem Abschluss des Kapitels ``<<cha:control,Kontrollstrukturen>>'' haben Sie den 7. Kyu erreicht und sich den orangenen Gürtel in Perl verdient.

Mit den einfachen Variablen aus Kapitel ``<<cha:varexpr,Arbeiten mit Daten>>'' kommen wir nicht allzu weit. Deshalb erweitert Kapitel ``<<cha:complexdata,Zusammengesetzte Datentypen>>'' Ihren bisherigen Horizont und stellt Ihnen die zusammengesetzten Datentypen ``Array'' und ``Hash'' vor. Der 6. Kyu ist der Schülergrad, den Sie erreichen, wenn Sie dieses Kapitel absolviert haben. Sie dürfen sich dann einen grünen Gürtel umbinden.

Manchmal sind die einfachsten Dinge die mächstigsten. Das gilt auch für die ``Referenzen'' im <<cha:references,gleichnamigen Kapitel>>. Man kann ihre Definition in einem kurzen Satz zusammenfassen. Ihr praktischer Einsatz allerdings erfordert konzentriertes Mitdenken. Deshalb besteht dieses Kapitel dann doch aus mehr als einem Satz. Am Ende haben Sie den Schlüssel zu beliebig komplexen Datenstrukturen und den 5. Kyu.

Im Laufe der Zeit wird nicht nur Ihre Erfahrung mit Perl, sondern auch die Länge Ihrer Programme wachsen. Damit sie dann noch wartbar sind, ist es erforderlich, sie in möglichst unabhängige Bausteine zu gliedern. Das Kapitel ``<<cha:subroutines,Unterprogramme>>'' stellt die dazu nötigen Mittel vor und beschert Ihnen den 4. Kyu mit dem blauen Gürtel in Perl.

Das nächste Kapitel ``<<cha:fileio,Datei- und Verzeichnisfunktionen>>'' geht auf eines der wichtigsten Themen der Perl-Programmierung ein. In diesem Kapitel werden Sie lernen, Informationen aus Dateien zu lesen und in Dateien dauerhaft abzulegen. Auch die Arbeit mit Verzeichnissen wird hier erklärt. Der violette Gürtel steht für den 3. Kyu, den Sie am Ende dieses Kapitels verliehen bekommen.

Das Thema ``Gliederung eines Programms'' aus dem Kapitel ``<<cha:subroutines,Unterprogramme>>'' führt das Kapitel ``<<cha:packages,Module>>'' fort. Hier lernen Sie nicht nur, wie Sie Programmlogik auf getrennte Dateien aufteilen können, sondern auch, wie Sie durch die sogenannten ``Packages'' Programmbausteine herstellen können, sie sich einfach einbinden und immer wieder verwenden lassen. Mit dem 2. Kyu am Ende dieses Kapitels wird Ihnen der braune Gürtel zugeteilt, und ab hier gibt es dann nur noch eine Farbveränderung: die zum Schwarzgurt!

Perl ist für seine Fähigkeit bekannt, Textdaten ohne viel Programmieraufwand verarbeiten zu können. Der Schlüssel dazu sind die ``<<cha:regex,Regulären Ausdrücke>>'', die wir uns im folgenden Kapitel anschauen werden. Diese Ausdrücke sind nicht ganz einfach zu verstehen, aber unglaublich effektiv. Und hey, wir sind beim 1. Kyu -- wir stehen also vor dem ersten Meistergrad!

Den Schritt in die Klasse der Perl-Meister machen wir mit einem Thema, ohne das Profis nicht auskommen können: die ``Objektorientierte Programmierung''. Diese Art, Software zu bauen, hat sich inzwischen als Standard etabliert und ist längst nicht nur Programmiersprachen wie C++ oder Java vorbehalten. Wie OOP in Perl funktioniert, lernen Sie im Kapitel ``<<cha:oop,Objektorientierte Programmierung>>''. Wer dieses Thema verstanden hat und in die Praxis umsetzen kann, hat den 1. Dan und damit den schwarzen Gürtel in Perl verdient. Mit dem Wissen, das Sie jetzt gesammelt haben, können Sie professionell Software entwickeln und sich ohne Zögern der weltweiten Perl-Entwicklergemeinde anschließen!


=== Voraussetzungen

Bereits mit Grundkenntnissen ist die Erstellung einfacher funktionierender
Perl-Programme möglich. Die notwendigen Kenntnisse für dieses Training sind
deshalb wirklich minimal.

Sie sollten sich in der grundlegenden Handhabung eines Betriebssystems
(idealerweise Linux, aber auch Windows oder Mac OS X sind brauchbare
Plattformen für die Perl-Entwicklung) gut zurechtfinden und einen einfachen
Texteditor bedienen können. Das ist schon alles!


=== Konventionen

Folgende typografische Konventionen werden in diesem Buch verwendet:

_Hervorhebung_::

    Zeigt Betonungen, neue Begriffe, URLs, E-Mail-Adressen, Dateinamen, Pfade
    und Unix-Dienstprogramme an.
    
+Literal+::

	Zeigt Kommandos, Variablen, Attribute, Funktionen, Klassen, Namespaces,
	Methoden, Module, Werte, Dateiinhalte, Bildschirmausgaben und
	Programmierbeispiele an.

Die folgenden Symbole kennzeichnen besondere Textabschnitte:

TIP: _Aufgabe_ — Nehmen Sie sich Zeit, Ihr Wissen durch Bearbeiten dieser Übung zu vertiefen.

IMPORTANT: _Wichtig_ — Diesen Hinweis sollten Sie sich einprägen.


////
Include chapters
////

include::chp-01-basics.asc[]

include::chp-02-varexpr.asc[]

include::chp-03-control.asc[]

include::chp-04-complexdata.asc[]

include::chp-05-references.asc[]

include::chp-06-subroutines.asc[]

include::chp-07-fileio.asc[]

include::chp-08-packages.asc[]

include::chp-09-regex.asc[]

include::chp-10-oop.asc[]

include::chp-11-finish.asc[]


////
Backmatter
////


ifdef::backend-docbook[]
[index]
== Index
////////////////////////////////////////////////////////////////
The index is normally left completely empty, its contents being
generated automatically by the DocBook toolchain.
////////////////////////////////////////////////////////////////
endif::backend-docbook[]
